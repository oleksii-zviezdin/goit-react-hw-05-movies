{"version":3,"file":"static/js/186.45b64546.chunk.js","mappings":"iMAkCA,UA9BgB,WACZ,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAiBH,GAChBI,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAeN,EAAeM,EAA9B,IACLC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACP,KAGA,gCACKF,EAAYY,OAAS,IAClB,wBACKZ,EAAYa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACI,2BACI,wBACI,8BAAQ,WAASD,QAErB,uBAAIC,MAJCF,EAOhB,MAEe,IAAvBd,EAAYY,SAAiB,uBAAG,+CAG5C,C,uJChCD,IAAMK,EAAQ,gCAERC,EAAQC,EAAQ,MAChBC,EAAU,CACRC,OAAQ,MACRC,QAAS,CACTC,OAAQ,mBACRC,cAAe,+NAIjBC,EAAsB,SAAAC,GACxB,IAAMC,EAAG,UAAMV,EAAN,qCACT,GAAoB,IAAhBS,EAAKd,OAET,OAAOM,EAAMS,EAAKP,GACbd,MAAK,SAAAsB,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MAEV,OAAOD,EAAIG,MACd,GACR,EAEKC,EAAmB,SAAAC,GACrB,IAAMN,EAAG,UAAMV,EAAN,8BAAoCgB,EAApC,8CACT,GAAKA,EAEL,OAAOf,EAAMS,EAAKP,GACjBd,MAAK,SAAAsB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKG,EAAiB,SAAChC,GACpB,IAAMyB,EAAG,UAAMV,EAAN,iBAAuBf,EAAvB,mBACT,GAAIA,GAAuB,KAAZA,EAEf,OAAOgB,EAAMS,EAAKP,GACjBd,MAAK,SAAAsB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKI,EAAmB,SAACjC,GACtB,IAAMyB,EAAG,6CAAyCzB,EAAzC,2BAET,OAAOgB,EAAMS,EAAKP,GACjBd,MAAK,SAAAsB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEK1B,EAAmB,SAACH,GACtB,IAAMyB,EAAG,6CAAyCzB,EAAzC,kCAET,OAAOgB,EAAMS,EAAKP,GACjBd,MAAK,SAAAsB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,C,uBC7DD,IAUIK,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIT,MAAM,iCAChB,CAEkBU,GAEnBC,EAAOC,QAAUA,EAAUN,EAAalB,MAGpCkB,EAAalB,QAChBwB,EAAAA,QAAkBN,EAAalB,MAAMyB,KAAKP,IAG3CM,EAAQE,QAAUR,EAAaQ,QAC/BF,EAAQG,QAAUT,EAAaS,QAC/BH,EAAQI,SAAWV,EAAaU,Q","sources":["components/Reviews/Reviews.jsx","service/fetchAPI.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import { fetchReviewsById } from \"../../service/fetchAPI\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Reviews = () => {\n    const [dataReviews, setDataReviews] = useState([]);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        fetchReviewsById(movieId)\n        .then(({results}) => setDataReviews(results))\n        .catch(err => console.error('error:' + err));\n    }, [movieId])\n    \n    return (\n        <>\n            {dataReviews.length > 0 &&\n                <ul>\n                    {dataReviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <p>\n                                    <strong>Author: {author}</strong>\n                                </p>\n                                <p>{content}</p>\n                            </li>\n                        )\n                    })}\n                </ul>}\n            {dataReviews.length === 0 &&  <p>We don't have any rewievs for this movie</p>}\n        </>\n    )\n}\n\nexport default Reviews","const BASE_URL = `https://api.themoviedb.org/3/`;\n\nconst fetch = require('node-fetch');\nconst options = {\n        method: 'GET',\n        headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYTBkOGUyNTQ0ZTgxNzg3NTJlYTQ3YTI0ZGI3NjFkOCIsInN1YiI6IjY0NmQxOTYxYzM1MTRjMmIwNjg4OTdiOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1c5ZzEt1F0rRDlRLvBxcNocvVNrwAuMtwV3umPbxDRg'\n    }\n    };\n\nconst fetchTrandingMovies = data => {\n    const url = `${BASE_URL}trending/movie/day?language=en-US`;\n    if (data.length === 0) return\n    \n    return fetch(url, options)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error(`res.ok is \"${res.ok}\"`)\n            }\n            return res.json()\n        })\n}\n\nconst fetchSearchMovie = value => {\n    const url = `${BASE_URL}search/movie?query=${value}&include_adult=false&language=en-US&page=1`;\n    if (!value) return\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchMovieById = (movieId) => {\n    const url = `${BASE_URL}movie/${movieId}?language=en-US`;\n    if(!movieId || movieId === \"\") return\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchCreditsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchReviewsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nexport {fetchSearchMovie, fetchTrandingMovies, fetchMovieById, fetchCreditsById, fetchReviewsById}","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["useState","dataReviews","setDataReviews","movieId","useParams","useEffect","fetchReviewsById","then","results","catch","err","console","error","length","map","id","author","content","BASE_URL","fetch","require","options","method","headers","accept","Authorization","fetchTrandingMovies","data","url","res","ok","Error","json","fetchSearchMovie","value","fetchMovieById","fetchCreditsById","globalObject","self","window","global","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}